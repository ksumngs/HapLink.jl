var documenterSearchIndex = {"docs":
[{"location":"api/variationpileup/#VariationPileup","page":"VariationPileup","title":"VariationPileup","text":"","category":"section"},{"location":"api/variationpileup/","page":"VariationPileup","title":"VariationPileup","text":"CurrentModule = HapLink\nDocTestSetup = quote\n    using HapLink\nend","category":"page"},{"location":"api/variationpileup/","page":"VariationPileup","title":"VariationPileup","text":"VariationPileup","category":"page"},{"location":"api/variationpileup/#HapLink.VariationPileup","page":"VariationPileup","title":"HapLink.VariationPileup","text":"VariationPileup\n\nSummarizes the basecalls that support a Variation within a set of alignments.\n\nFields\n\nvariation::Variation: The Variation of this pileup entry\ndepth::UInt: The number of times the position of variation appears in this set of alignments\nreadpos::Vector{Float64}: The relative positions of variation within each read\nquality::Vector{Float64}: The phred quality of variation within each read\nstrand::Vecotr{Strand}: Which strand each variation is found on\n\n\n\n\n\n","category":"type"},{"location":"api/variationpileup/#Getter-methods","page":"VariationPileup","title":"Getter methods","text":"","category":"section"},{"location":"api/variationpileup/","page":"VariationPileup","title":"VariationPileup","text":"variation(::VariationPileup)\ndepth(::VariationPileup)\nreadpos(::VariationPileup)\nquality(::VariationPileup)\nstrand(::VariationPileup)\n","category":"page"},{"location":"api/variationpileup/#HapLink.variation-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.variation","text":"variation(vp::VariationPileup)\n\nGets the Variation of vp\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#HapLink.depth-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.depth","text":"depth(vp::VariationPileup)\n\nGets the number of times the position of vp.variation appears total (variant and wild-type)\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#HapLink.readpos-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.readpos","text":"readpos(vp::VariationPileup)\n\nGets the relative positions of vp.variation\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#HapLink.quality-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.quality","text":"quality(vp::VariationPileup)\n\nGets the phred qualities of vp.variation\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#HapLink.strand-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.strand","text":"strand(vp::VariationPileup)\n\nGets the strands of vp.variation\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#Pileup-calculations","page":"VariationPileup","title":"Pileup calculations","text":"","category":"section"},{"location":"api/variationpileup/","page":"VariationPileup","title":"VariationPileup","text":"altdepth(::VariationPileup)\nfrequency(::VariationPileup)\nstrand_bias(::VariationPileup)","category":"page"},{"location":"api/variationpileup/#HapLink.altdepth-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.altdepth","text":"altdepth(vp::VariationPileup)\n\nGets the number of times vp.variation appears\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#HapLink.frequency-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.frequency","text":"frequency(vp::VariationPileup)\n\nGets the alternate allele frequency of vp.variation\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#HapLink.strand_bias-Tuple{VariationPileup}","page":"VariationPileup","title":"HapLink.strand_bias","text":"strand_bias(vp::VariationPileup)\n\nGets the frequency of positive strands that variation appears on relative to all variation reads\n\n\n\n\n\n","category":"method"},{"location":"api/variationpileup/#Miscellaneous","page":"VariationPileup","title":"Miscellaneous","text":"","category":"section"},{"location":"api/variationpileup/","page":"VariationPileup","title":"VariationPileup","text":"pileup","category":"page"},{"location":"api/variationpileup/#HapLink.pileup","page":"VariationPileup","title":"HapLink.pileup","text":"pileup(sam::AbstractPath, ref::AbstractPath) -> Vector{VariationPileup}\n\nGenerates a pileup of Variations based on the alignments in sam aligned against ref.\n\n\n\n\n\n","category":"function"},{"location":"api/variationcall/#VariationCall","page":"VariationCall","title":"VariationCall","text":"","category":"section"},{"location":"api/variationcall/","page":"VariationCall","title":"VariationCall","text":"CurrentModule = HapLink\nDocTestSetup = quote\n    using HapLink\nend","category":"page"},{"location":"api/variationcall/","page":"VariationCall","title":"VariationCall","text":"VariationCall","category":"page"},{"location":"api/variationcall/#HapLink.VariationCall","page":"VariationCall","title":"HapLink.VariationCall","text":"VariationCall\n\nRepresents a Variation that is supported by aligned reads with sufficient metadata to support or refute its validity. It is designed to be converted into a line in Variant Call Format, or a VCF.Record.\n\nFields\n\nvariation::Variation: The Variation of this call\nquality::Union{Nothing,Number}: Phred quality of the basecall for variation\nfilter::Vector{String}: Indicator if variation has passed filters and is actually a variant call, or a list of criteria that have failed it\ndepth::Union{Nothing,UInt}: The number of reads that cover leftposition(variation)\nstrandbias::Union{Nothing,Float64}: The fraction of times variation appears on a positive strand\naltdepth::Union{Nothing,UInt}: The number of types variation occurs\nreadpos::Union{Nothing,UInt}: The averagerelative position of variation in each read\npvalue::Union{Nothing,Float64}: The Fisher's Exact Test p-value of this call\n\n\n\n\n\n","category":"type"},{"location":"api/variationcall/#Getter-methods","page":"VariationCall","title":"Getter methods","text":"","category":"section"},{"location":"api/variationcall/","page":"VariationCall","title":"VariationCall","text":"variation(::VariationCall)\nquality(::VariationCall)\nfilter(::VariationCall)\ndepth(::VariationCall)\nstrand_bias(::VariationCall)\naltdepth(::VariationCall)\nreadpos(::VariationCall)\np_value(::VariationCall)\nfrequency(::VariationCall)","category":"page"},{"location":"api/variationcall/#HapLink.variation-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.variation","text":"variation(vc::VariationCall) -> SequenceVariation.Variation\n\nGets the Variation of a VariationCall\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#HapLink.quality-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.quality","text":"quality(vc::VariationCall) -> Union{Nothing,Float64}\n\nGets the average phred quality score of vc, if known. Returns nothing if unknown.\n\nSee also quality(::VariationInfo), quality(::VariationPileup)\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#HapLink.depth-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.depth","text":"depth(vc::VariationCall) -> Union{Nothing,UInt}\n\nGets the number of times the position of vc appears total. Returns nothing if unknown.\n\nSee also depth(::VariationPileup)\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#HapLink.strand_bias-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.strand_bias","text":"strand_bias(vc::VariationCall) -> Union{Nothing,Float64}\n\nGets the fraction of times vc appears on the positive strand. Returns nothing if unknown.\n\nSee also strand(::VariationInfo), strand(::VariationPileup)\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#HapLink.altdepth-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.altdepth","text":"altdepth(vc::VariationCall) -> Union{Nothing,UInt}\n\nGets the number of times vc appears. Returns nothing if unknown.\n\nSee also altdepth(::VariationPileup)\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#HapLink.readpos-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.readpos","text":"readpos(vc::VariationCall) -> Union{Nothing,Float64}\n\nGets the average relative position of vc. Returns nothing if unknown.\n\nSee also readpos(::VariationPileup)\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#HapLink.p_value-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.p_value","text":"p_value(vc::VariationCall) -> Union{Nothing,Float64}\n\nGets the p-value of the observed statistic of vc. Returns nothing if unknown.\n\nSee also variation_test\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#HapLink.frequency-Tuple{VariationCall}","page":"VariationCall","title":"HapLink.frequency","text":"frequency(vc::VariationCall) -> Float64\n\nGets the alternate allele frequency of vc\n\nSee also frequency(::VariationPileup)\n\n\n\n\n\n","category":"method"},{"location":"api/variationcall/#Variant-calling-methods","page":"VariationCall","title":"Variant calling methods","text":"","category":"section"},{"location":"api/variationcall/","page":"VariationCall","title":"VariationCall","text":"variation_test\ncall_variant","category":"page"},{"location":"api/variationcall/#HapLink.variation_test","page":"VariationCall","title":"HapLink.variation_test","text":"variation_test(depth::Int, altdepth::Int, quality::Float64)\n\nConducts a Fisher's Exact Test to deterimine the likelihood of a variant with total depth and variation depth altdepth occuring, given an average basecall quality. Returns the p-value of the test.\n\n\n\n\n\n","category":"function"},{"location":"api/variationcall/#HapLink.call_variant","page":"VariationCall","title":"HapLink.call_variant","text":"call_variant(\n    pileup::VariationPileup,\n    Î±::Float64;\n    D::Union{Nothing,Int}=nothing,\n    Q::Union{Nothing,Float64}=nothing,\n    X::Union{Nothing,Float64}=nothing,\n    F::Union{Nothing,Float64}=nothing,\n    S::Union{Nothing,Float64}=nothing,\n) -> VariationCall\n\nCalls variant from a pileup.\n\nArguments\n\npileup::VariationPileup: The pileup to call variants from\nÎ±::Float64: Fisher's Exact Test significance (Î±) level to call variants\n\nKeywords\n\nnote: Note\nLeave any keyword undefined to skip filtering based on that field\n\nD::Union{Nothing,Int}=nothing: Minimum total read depth for a variant to be called\nQ::Union{Nothing,Float64}=nothing: Minimum average Phred quality for a variant to be   called\nX::Union{Nothing,Float64}=nothing: Maximum average distance variant can be from read   edge to be called\nF::Union{Nothing,Float64}=nothing: Minimum alternate frequency for a variant to be   called\nS::Union{Nothing,Float64}=nothing: Maximum proportion of the number of times variant can   appear on one strand versus the other\n\n\n\n\n\n","category":"function"},{"location":"api/variationinfo/#VariationInfo","page":"VariationInfo","title":"VariationInfo","text":"","category":"section"},{"location":"api/variationinfo/","page":"VariationInfo","title":"VariationInfo","text":"CurrentModule = HapLink\nDocTestSetup = quote\n    using HapLink\nend","category":"page"},{"location":"api/variationinfo/","page":"VariationInfo","title":"VariationInfo","text":"VariationInfo","category":"page"},{"location":"api/variationinfo/#HapLink.VariationInfo","page":"VariationInfo","title":"HapLink.VariationInfo","text":"VariationInfo{S<:BioSequence,T<:BioSymbol}\n\nRepresents statistics associated with a SequenceVariation.Variation within an aligned sequencing read.\n\nFields\n\nvariation::Variation{S,T}: The Variation this object represents\nreadpos::Float64: The location where variation occurs within a sequencing read\nquality::Float64: The phred-scaled basecall quality of variation\nStrand::GenomicFeatures.Strand: Which strand variation appears on\n\n\n\n\n\n","category":"type"},{"location":"api/variationinfo/#Getter-methods","page":"VariationInfo","title":"Getter methods","text":"","category":"section"},{"location":"api/variationinfo/","page":"VariationInfo","title":"VariationInfo","text":"variation(::VariationInfo)\nreadpos(::VariationInfo)\nquality(::VariationInfo)\nstrand(::VariationInfo)","category":"page"},{"location":"api/variationinfo/#HapLink.variation-Tuple{VariationInfo}","page":"VariationInfo","title":"HapLink.variation","text":"variation(vi::VariationInfo) -> SequenceVariation.Variation\n\nGets the Variation of a VariationInfo\n\n\n\n\n\n","category":"method"},{"location":"api/variationinfo/#HapLink.readpos-Tuple{VariationInfo}","page":"VariationInfo","title":"HapLink.readpos","text":"readpos(vi::VariationInfo) -> Float64\n\nGets the position of variation(vi) within a sequencing read\n\n\n\n\n\n","category":"method"},{"location":"api/variationinfo/#HapLink.quality-Tuple{VariationInfo}","page":"VariationInfo","title":"HapLink.quality","text":"quality(vi::VariationInfo) -> Float64\n\nGets the phred-scaled basecall quality of variation(vi) within a sequencing read\n\n\n\n\n\n","category":"method"},{"location":"api/variationinfo/#HapLink.strand-Tuple{VariationInfo}","page":"VariationInfo","title":"HapLink.strand","text":"strand(vi::VariationInfo) -> GenomicFeatures.Strand\n\nGets the strand that variation(vi) appears on\n\n\n\n\n\n","category":"method"},{"location":"api/variationinfo/#Miscellaneous","page":"VariationInfo","title":"Miscellaneous","text":"","category":"section"},{"location":"api/variationinfo/","page":"VariationInfo","title":"VariationInfo","text":"variationinfos","category":"page"},{"location":"api/variationinfo/#HapLink.variationinfos","page":"VariationInfo","title":"HapLink.variationinfos","text":"variationinfos(\n    query::Union{SAM.Record,BAM.Record}, reference::NucleotideSeq\n) -> Vector{VariationInfo}\nvariationinfos(\n    query::Union{AbstractString,AbstractPath},\n    reference::Union{AbstractString,AbstractPath}\n) -> Vector{VariationInfo}\n\nCalls Variations based on the alignments in query against reference, and returns every variation call found within query as a Vector{VariationInfo}\n\n\n\n\n\n","category":"function"},{"location":"#HapLink","page":"Home","title":"HapLink","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for HapLink.","category":"page"},{"location":"api/variation/#Variation-Methods","page":"Variation Extensions","title":"Variation Methods","text":"","category":"section"},{"location":"api/variation/","page":"Variation Extensions","title":"Variation Extensions","text":"CurrentModule = HapLink\nDocTestSetup = quote\n    using HapLink\nend","category":"page"},{"location":"api/variation/","page":"Variation Extensions","title":"Variation Extensions","text":"These methods extend the functionality of SequenceVariation.Variation for calculation of data related to Variations created from NGS read alignments.","category":"page"},{"location":"api/variation/","page":"Variation Extensions","title":"Variation Extensions","text":"seqpos\nrelativepos\nquality(::Variation, ::Union{SAM.Record,BAM.Record})\nvariation(::VCF.Record, ::NucleotideSeq)","category":"page"},{"location":"api/variation/#HapLink.seqpos","page":"Variation Extensions","title":"HapLink.seqpos","text":"seqpos(v::Variation, a::Union{Alignment,AlignedSequence,PairwiseAlignment})\n\nGet the position of v in the sequence of a.\n\nExample\n\nusing BioAlignments, BioSequences, SequenceVariation\nv = Variation(dna\"AAAAA\", \"A3T\")\na = Alignment(\"2=1X2=\", 1, 1)\nseqpos(v, a)\n\n# output\n\n3\n\n\n\n\n\n","category":"function"},{"location":"api/variation/#HapLink.relativepos","page":"Variation Extensions","title":"HapLink.relativepos","text":"relativepos(v::Variation, r::Union{SAM.Record,BAM.Record})\n\nCalculates the fractional position of v within the sequence of r. If v is out-of-bounds of r, then will return 0 for positions before r and 1 for positions after r.\n\n\n\n\n\n","category":"function"},{"location":"api/variation/#HapLink.quality-Tuple{SequenceVariation.Variation, Union{XAM.BAM.Record, XAM.SAM.Record}}","page":"Variation Extensions","title":"HapLink.quality","text":"quality(v::Variation, r::Union{SAM.Record,BAM.Record}) -> Float64\n\nGet the phred-scalled basecall quality of v within the sequencing read of r.\n\n\n\n\n\n","category":"method"},{"location":"api/variation/#HapLink.variation-Tuple{VariantCallFormat.Record, BioSequences.BioSequence{<:BioSequences.NucleicAcidAlphabet}}","page":"Variation Extensions","title":"HapLink.variation","text":"variation(r::VCF.Record, refseq::NucleotideSeq)\n\nConstruct a Variation from r applying to refseq. There is no validation that r's actually describes a mutation in refseq.\n\n\n\n\n\n","category":"method"}]
}
