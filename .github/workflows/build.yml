name: Binary Builder
on:
  push:
    tags:
      - 'v[0-9]+.*'
jobs:
  binary_build:
    name: Build Binaries
    runs-on: ${{ matrix.config.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
          #- os: macos-latest
          #- os: windows-latest
    steps:
      - uses: actions/checkout@v2
      - id: tag_name
        shell: bash
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.6'
          arch: x64
      - uses: julia-actions/julia-buildpkg@v1
      - run: |
          julia -e 'using Pkg; Pkg.add("PackageCompiler")'
        shell: bash
      - run: |
          julia -e '
          using PackageCompiler
          create_app(
            ".",
            "build",
            precompile_execution_file="precompile_app.jl",
            executables=[
              "haplink" => "haplink",
            ],
            cpu_target="x86-64"
          )'
        shell: bash
      - if: ${{ matrix.config.os == 'ubuntu-latest' }}
        shell: bash
        env:
          SOURCE_TAG: ${{ steps.tag_name.outputs.SOURCE_TAG }}
        run: |
          tar cv -C build . | gzip -9 > HapLink-${SOURCE_TAG}_linux.x86_64.tar.gz
      - if: ${{ matrix.config.os == 'macos-latest' }}
        shell: bash
        env:
          SOURCE_TAG: ${{ steps.tag_name.outputs.SOURCE_TAG }}
        run: |
          tar cv -C build . | gzip -9 > HapLink-${SOURCE_TAG}_mac.x86_64.tar.gz
      - if: ${{ matrix.config.os == 'windows-latest' }}
        shell: pwsh
        env:
          SOURCE_TAG: ${{ steps.tag_name.outputs.SOURCE_TAG }}
        run: |
          Compress-Archive -Path .\build\* -DestinationPath .\HapLink-${SOURCE_TAG}_win.x86_64.zip
      - id: news
        shell: bash
        run: |
          TAG=${{ github.ref }}
          VERSION=${TAG/v/}
          VERSIONLINE=$(grep -n "## \[$VERSION\] - ....-..-..$" CHANGELOG.md | cut -d ':' -f1)
          readarray -t HEADERLINES < <(grep -n "## \[.*\] - ....-..-..$" CHANGELOG.md | cut -d ':' -f1)
          for LINENUM in "${HEADERLINES[@]}"; do
            if [[ $LINENUM -gt $VERSIONLINE ]]; then
              export NEXTLINE=$LINENUM
              break
            fi
          done
          LBOUND=$(( VERSIONLINE + 1 ))
          UBOUND=$(( NEXTLINE - 1 ))
          SPAN=$(( UBOUND - LBOUND ))
          NEWS=$(head -n $UBOUND CHANGELOG.md | tail -n $SPAN)
          echo $NEWS
          echo "::set-output name=RELEASE_BODY::$NEWS"
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file_glob: true
          file: HapLink-*_{linux,mac,win}.x86_64.{tar.gz,zip}
          body: |
            ${{ steps.news.outputs.RELEASE_BODY }}
